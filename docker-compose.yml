version: '3.8'

services:
  # API Gateway Microservice
  api-gateway:
    build:
      context: ./APIGateway_Microservice
      dockerfile: Dockerfile
    container_name: api-gateway-local
    hostname: api-gateway
    restart: always
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=${API_GATEWAY_PORT}
      - NODE_ENV=${NODE_ENV}
      - REGISTRATION_SERVICE_URL=${REGISTRATION_SERVICE_URL}
      - COACH_SERVICE_URL=${COACH_SERVICE_URL}
      - PLAYER_SERVICE_URL=${PLAYER_SERVICE_URL}
    networks:
      - esports-net-local
    depends_on:
      - registration-service
      - coach-service
      - player-service

  # Registration Microservice
  registration-service:
    build:
      context: ./Registration_Microservice
      dockerfile: Dockerfile
    container_name: registration-local
    hostname: registration
    restart: always
    ports:
      - "${REGISTRATION_SERVICE_PORT}:${REGISTRATION_SERVICE_PORT}"
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=${REGISTRATION_SERVICE_PORT}
      - NODE_ENV=${NODE_ENV}
    networks:
      - esports-net-local

  # Coach Microservice
  coach-service:
    build:
      context: ./Coach_Microservice
      dockerfile: Dockerfile
    container_name: coach-local
    hostname: coach
    restart: always
    ports:
      - "${COACH_SERVICE_PORT}:${COACH_SERVICE_PORT}"
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=${COACH_SERVICE_PORT}
      - NODE_ENV=${NODE_ENV}
    networks:
      - esports-net-local

  # Player Microservice
  player-service:
    build:
      context: ./Player_Microservice
      dockerfile: Dockerfile
    container_name: player-local
    hostname: player
    restart: always
    ports:
      - "${PLAYER_SERVICE_PORT}:${PLAYER_SERVICE_PORT}"
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=${PLAYER_SERVICE_PORT}
      - NODE_ENV=${NODE_ENV}
    networks:
      - esports-net-local

networks:
  esports-net-local:
    driver: bridge